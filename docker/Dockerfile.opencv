FROM balenalib/raspberrypi3-64-openjdk:11-bullseye

## Setting working directory and OpenCV version
WORKDIR /usr/src/app
ENV OPENCV_VERSION 4.3.0

## Compile and install OpenCV (from https://linuxize.com/post/how-to-install-opencv-on-debian-10/)
RUN install_packages build-essential cmake ant maven git wget pkg-config libgtk-3-dev libavcodec-dev \
           libavformat-dev libswscale-dev libv4l-0 libv4l-dev libxvidcore-dev libx264-dev libjpeg-dev \
           libpng-dev libtiff-dev libatlas-base-dev python3-dev python3-numpy \
           libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev \
           libopenblas-dev liblapack-dev libeigen3-dev libmpfrc++-dev

## Checkout OpenCV release
RUN mkdir -p opencv_build
WORKDIR /usr/src/app/opencv_build
RUN git clone --branch $OPENCV_VERSION --single-branch --depth 1 https://github.com/opencv/opencv && mkdir -p opencv/build
RUN git clone --branch $OPENCV_VERSION --single-branch --depth 1 https://github.com/opencv/opencv_contrib && mkdir -p opencv_contrib/build

WORKDIR /usr/src/app/opencv_build/opencv/build

# Install Corretto Java SDK since OpenJDK seems to be only available as JRE in Debian bullseye for ARM64
#ENV JAVA_HOME /usr/lib/jvm/java-11-openjdk-arm64/
RUN wget https://corretto.aws/downloads/latest/amazon-corretto-11-aarch64-linux-jdk.deb \
	&& dpkg -i *.deb && rm *.deb
ENV JAVA_HOME /usr/lib/jvm/java-11-amazon-corretto
ENV ANT_HOME /usr/bin/ant

RUN cmake \
#    -D CMAKE_INSTALL_PREFIX=/usr/local \
#    -D INSTALL_C_EXAMPLES=OFF \
#    -D INSTALL_PYTHON_EXAMPLES=OFF \
#    -D BUILD_TESTING=OFF \
#    -D BUILD_TESTING_SHARED=OFF \
#    -D BUILD_TESTING_STATIC=OFF \
#    -D OPENCV_GENERATE_PKGCONFIG=ON \
#    -D OPENCV_EXTRA_MODULES_PATH=/usr/src/app/opencv_build/opencv_contrib/modules \
#    -D BUILD_EXAMPLES=OFF \
#    -D BUILD_DOCS=OFF \
#    -D BUILD_FAT_JAVA_LIB=ON \
#    -D BUILD_JAVA=ON \
    -D OPENCV_ENABLE_NONFREE=ON \
    -D CMAKE_BUILD_TYPE=RELEASE \
    -D BUILD_SHARED_LIBS=OFF .. && make -j8 install && find . -name libopencv_*.so

CMD ["bash"]
